{"version":3,"sources":["ScoreKeeper.js","models.js","othello.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["/**\r\n * Created by Eric on 4/5/2015.\r\n */\r\nclass ScoreKeeper {\r\n    constructor( gameBoard ) {\r\n        this.gameBoard = gameBoard;\r\n        this.numRows = gameBoard.rows.length;\r\n        this.numCols = gameBoard.rows[0].length;\r\n    }\r\n\r\n    playerHasNextMove( playerNumber ) {\r\n        let self = this;\r\n        self.getEmptyCells().forEach( function ( cell ) {\r\n            if ( self.setScoreForMove( cell.col, cell.row, playerNumber ) > 0 ) {\r\n                return true;\r\n            }\r\n        } );\r\n\r\n        return false;\r\n    }\r\n\r\n    getGameBoardState( currentPlayerNumber, nextPlayerNumber) {\r\n        let nextPlayerHasMove = this.playerHasNextMove( nextPlayerNumber ),\r\n            currentPlayerHasMove = this.playerHasNextMove( currentPlayerNumber ),\r\n            gameOver = !nextPlayerHasMove && !currentPlayerHasMove;\r\n\r\n        return [ nextPlayerHasMove, currentPlayerHasMove, gameOver ];\r\n    }\r\n\r\n\r\n    setScoreForMove( x, y, player ) {\r\n        let hits = [];\r\n\r\n        hits = hits.concat( this.searchUp( x, y, player ) );\r\n        hits = hits.concat( this.searchUpAndRight( x, y, player  ));\r\n        hits = hits.concat( this.searchRight( x, y, player ));\r\n        hits = hits.concat( this.searchDownAndRight( x, y, player ));\r\n        hits = hits.concat( this.searchDown( x, y, player ));\r\n        hits = hits.concat( this.searchDownAndLeft( x, y, player ));\r\n        hits = hits.concat( this.searchLeft( x, y, player ));\r\n        hits = hits.concat( this.searchUpAndLeft( x, y, player ));\r\n\r\n        console.log( \"POINTS EARNED: %d\", hits.length );\r\n        console.log( \"HITS: \", hits );\r\n        return hits;\r\n    }\r\n\r\n    getFlatGameBoard() {\r\n        return Array.prototype.concat.apply( [], this.gameBoard.rows );\r\n    }\r\n\r\n    getEmptyCells() {\r\n        return this.getFlatGameBoard().filter( function ( c ) {\r\n            return c.player === 0;\r\n        } );\r\n    }\r\n\r\n    calculatePoints( row, col, rowInc, colInc, player ) {\r\n        let cells = [], self = this;\r\n\r\n        if ( row === -1 || col === -1 || row === 8 || col === 8 ) {\r\n            return [];\r\n        }\r\n\r\n        function getScore( r, c ) {\r\n            let [ reachedEdge, isEmpty, isPoint, cell ] = self.checkCell( r, c, player );\r\n\r\n            if ( reachedEdge || isEmpty ) {\r\n                return [];\r\n            } else if ( isPoint ) {\r\n                console.log(\"HIT! \", cell);\r\n                cells.push( cell );\r\n                return getScore( r + rowInc, c + colInc );\r\n            } else {\r\n                console.log(\"Returning cells: \", cells);\r\n                return cells;\r\n            }\r\n        }\r\n\r\n        return getScore( row, col );\r\n    }\r\n\r\n    checkCell( row, col, player ) {\r\n        let hasReachedEdge = ( row === this.numRows - 1 || col === this.numCols - 1 ),\r\n            cell = this.gameBoard.rows[ row ][ col ],\r\n            isEmptyCell = cell.player === 0,\r\n            isPoint = cell.player !== player && !isEmptyCell;\r\n\r\n        return [ hasReachedEdge, isEmptyCell, isPoint, cell ];\r\n    }\r\n\r\n    getScoreForPlayer( playerNumber ) {\r\n        return this.getFlatGameBoard().reduce(function ( score, cell) {\r\n            if ( cell.player === playerNumber ) {\r\n                score++;\r\n            }\r\n            return score;\r\n        }, 0)\r\n    }\r\n\r\n    searchRight( startingX, startingY, player ) {\r\n        return this.calculatePoints( startingY, startingX + 1, 0, 1, player );\r\n    }\r\n\r\n    searchLeft( startingX, startingY, player ) {\r\n        return this.calculatePoints( startingY, startingX - 1, 0, -1, player );\r\n    }\r\n\r\n    searchUp( startingX, startingY, player ) {\r\n        return this.calculatePoints( startingY + 1, startingX, 1, 0, player );\r\n    }\r\n\r\n    searchDown( startingX, startingY, player ) {\r\n        return this.calculatePoints( startingY - 1, startingX, -1, 0, player );\r\n    }\r\n\r\n    searchUpAndRight( startingX, startingY, player ) {\r\n        return this.calculatePoints( startingY + 1, startingX + 1, 1, 1, player );\r\n    }\r\n\r\n    searchUpAndLeft( startingX, startingY, player ) {\r\n        return this.calculatePoints( startingY + 1, startingX - 1, 1, -1, player );\r\n    }\r\n\r\n    searchDownAndRight( startingX, startingY, player ) {\r\n        return this.calculatePoints( startingY - 1, startingX + 1, -1, 1, player );\r\n    }\r\n\r\n    searchDownAndLeft( startingX, startingY, player ) {\r\n        return this.calculatePoints( startingY - 1, startingX - 1, -1, -1, player );\r\n    }\r\n}","/**\r\n * Created by Eric on 4/4/2015.\r\n */\r\n\r\nclass Player {\r\n    constructor ( num ) {\r\n        this.number = num;\r\n        this.score = 2;\r\n        this.moves = [];\r\n    }\r\n}\r\n\r\nclass Move {\r\n    constructor ( row, col, points ) {\r\n        this.x = col;\r\n        this.y = row;\r\n        this.pointValue = points;\r\n    }\r\n}\r\n\r\nclass Cell {\r\n    constructor( row, col ) {\r\n        this.row = row;\r\n        this.col = col;\r\n        this.player = 0;\r\n        this.potentialTarget = false;\r\n    }\r\n}\r\n\r\n","/**\r\n * Created by Eric on 4/4/2015.\r\n */\r\n\r\n(() => {\r\n    let gameBoard = {\r\n            rows: []\r\n        },\r\n        _playerOne = new Player( 1 ),\r\n        _playerTwo = new Player( 2 ),\r\n        _activePlayer = _playerOne,\r\n        _players = [ _playerOne, _playerTwo ],\r\n        _scoreKeeper;\r\n\r\n    const rowNum = 8;\r\n    const colNum = 8;\r\n\r\n    for ( let i = 0; i < rowNum; i++ ) {\r\n        let row = [];\r\n        for ( let j = 0; j < colNum; j++ ) {\r\n            row.push( new Cell( i, j ) );\r\n        }\r\n        gameBoard.rows.push( row );\r\n    }\r\n\r\n    _scoreKeeper = new ScoreKeeper( gameBoard );\r\n\r\n    function renderGameBoard() {\r\n        console.log( \"Gameboard: \", gameBoard );\r\n        let html = '';\r\n        gameBoard.rows.forEach( function ( row, i ) {\r\n            row.forEach( function ( cell, j ) {\r\n                html += `<div class='cell' data-target=\"${cell.potentialTarget}\" data-player-num=\"${cell.player}\" data-row-num='${i}' data-col-num='${j}'>${cell.player}</div>`;\r\n            } );\r\n\r\n        } );\r\n\r\n        $( \".game-board\" ).html( html );\r\n    }\r\n\r\n    $( \".game-board\" ).on( \"click\", \".cell\", function () {\r\n        let $cell = $( this );\r\n        let row = +$cell.data( \"row-num\" );\r\n        let col = +$cell.data( \"col-num\" );\r\n        let player = +$cell.data( \"player-num\" );\r\n        let cellObj = gameBoard.rows[ row ][ col ];\r\n        let isTarget = $cell.data( \"target\" );\r\n        let [ activePlayerNumber, otherPlayerNumber ] = getPlayerNumbers();\r\n\r\n        // calculate points and set cell values\r\n        let hits = _scoreKeeper.setScoreForMove( col, row, activePlayerNumber );\r\n        let pointsEarned = hits.length;\r\n\r\n        if ( !isTarget || pointsEarned === 0 )\r\n            return;\r\n\r\n        cellObj.player = activePlayerNumber;\r\n        hits.forEach( function ( h ) { h.player = activePlayerNumber } );\r\n\r\n        let move = new Move( row, col, pointsEarned );\r\n\r\n        _activePlayer.moves.push( move );\r\n\r\n        // check if next player has any moves based on board state\r\n        // no, declare victory, else continue\r\n        let potentialNextMoves = getPotentialNextMovesForNextPlayer();\r\n\r\n        //if ( gameOver ) {\r\n        //    // announce verdict\r\n        //    console.log(\"GAME OVER\");\r\n        //} else if ( nextPlayerHasMove ) {\r\n        //    updateActivePlayer( otherPlayerNumber );\r\n        //    // change active player in UI\r\n        //    console.log( \"It's now player %d's turn\", otherPlayerNumber );\r\n        //} else if ( currentPlayerHasMove ) {\r\n        //    // update UI with status\r\n        //    console.log( \"It's still player %d's turn\", otherPlayerNumber );\r\n        //}\r\n\r\n        updateActivePlayer( otherPlayerNumber );\r\n        renderGameBoard();\r\n        updateScoreBoards( _players );\r\n\r\n        if ( potentialNextMoves ) {\r\n            console.log( \"It's now player %d's turn\", otherPlayerNumber );\r\n        } else {\r\n            console.log( \"No next moves for player %d\", otherPlayerNumber );\r\n        }\r\n\r\n\r\n    } );\r\n\r\n    function getPotentialNextMovesForNextPlayer() {\r\n        let flatGamBoard = _scoreKeeper.getFlatGameBoard();\r\n        flatGamBoard.forEach( function ( cell ) {\r\n            cell.potentialTarget = false;\r\n        } );\r\n\r\n        let activePlayerCells = flatGamBoard\r\n            .filter( function ( cell ) {\r\n                return cell.player === _activePlayer.number;\r\n            } );\r\n\r\n        console.log( \"Active player cells: \", activePlayerCells );\r\n\r\n        let potentialNextMoves = [];\r\n        let rows = gameBoard.rows;\r\n        activePlayerCells.forEach( function ( c ) {\r\n            let above = rows[ c.row + 1 ][ c.col ];\r\n            if ( moveEarnsPoints( above ) ) {\r\n                above.potentialTarget = true;\r\n                potentialNextMoves.push( above );\r\n            }\r\n\r\n            let aboveRight = rows[ c.row + 1 ][ c.col + 1 ];\r\n            if ( moveEarnsPoints( aboveRight ) ) {\r\n                aboveRight.potentialTarget = true;\r\n                potentialNextMoves.push( aboveRight );\r\n            }\r\n\r\n            let aboveLeft = rows[ c.row + 1 ][ c.col - 1 ];\r\n            if ( moveEarnsPoints( aboveLeft ) ) {\r\n                aboveLeft.potentialTarget = true;\r\n                potentialNextMoves.push( aboveLeft );\r\n            }\r\n\r\n            let left = rows[ c.row ][ c.col - 1 ];\r\n            if ( moveEarnsPoints( left ) ) {\r\n                left.potentialTarget = true;\r\n                potentialNextMoves.push( left );\r\n            }\r\n\r\n            let right = rows[ c.row ][ c.col + 1 ];\r\n            if ( moveEarnsPoints( right ) ) {\r\n                right.potentialTarget = true;\r\n                potentialNextMoves.push( right );\r\n            }\r\n\r\n            let below = rows[ c.row - 1 ][ c.col ];\r\n            if ( moveEarnsPoints( below ) ) {\r\n                below.potentialTarget = true;\r\n                potentialNextMoves.push( below );\r\n            }\r\n\r\n            let belowRight = rows[ c.row - 1 ][ c.col + 1 ];\r\n            if ( moveEarnsPoints( belowRight ) ) {\r\n                belowRight.potentialTarget = true;\r\n                potentialNextMoves.push( belowRight );\r\n            }\r\n\r\n            let belowLeft = rows[ c.row - 1 ][ c.col - 1 ];\r\n            if ( moveEarnsPoints( belowLeft ) ) {\r\n                belowLeft.potentialTarget = true;\r\n                potentialNextMoves.push( belowLeft );\r\n            }\r\n\r\n            return potentialNextMoves;\r\n        } );\r\n    }\r\n\r\n    function moveEarnsPoints( cell ) {\r\n        let [x,  otherPlayerNumber ] = getPlayerNumbers(),\r\n            hits = _scoreKeeper.setScoreForMove( cell.col, cell.row, otherPlayerNumber );\r\n        return cell.player === 0 && hits.length > 0;\r\n    }\r\n\r\n    function updateActivePlayer( newPlayerNumber ) {\r\n        let playerIndex = newPlayerNumber === 1 ? 0 : 1;\r\n        _activePlayer = _players[ playerIndex ];\r\n    }\r\n\r\n    function updateScoreBoards( players ) {\r\n        players.forEach( function ( player ) {\r\n            let $playerSoreBoard = $( \".player-\" + player.number );\r\n\r\n            player.score = _scoreKeeper.getScoreForPlayer( player.number );\r\n\r\n            $( \".player-\" + player.number + \" .score\" ).html( player.score );\r\n            $( \".player-\" + player.number + \" .moves\" ).html( player.moves.length );\r\n\r\n            if ( player.number === _activePlayer.number ) {\r\n                $playerSoreBoard.addClass( \"active\" );\r\n            } else {\r\n                $playerSoreBoard.removeClass( \"active\" );\r\n            }\r\n        } );\r\n    }\r\n\r\n    function setNewGameValues() {\r\n        gameBoard.rows[ 3 ][ 3 ].player = 1;\r\n        gameBoard.rows[ 4 ][ 3 ].player = 2;\r\n        gameBoard.rows[ 3 ][ 4 ].player = 2;\r\n        gameBoard.rows[ 4 ][ 4 ].player = 1;\r\n\r\n        // mark player one potential targets\r\n        gameBoard.rows[ 2 ][ 4 ].potentialTarget = true;\r\n        gameBoard.rows[ 3 ][ 5 ].potentialTarget = true;\r\n        gameBoard.rows[ 4 ][ 2 ].potentialTarget = true;\r\n        gameBoard.rows[ 5 ][ 3 ].potentialTarget = true;\r\n    }\r\n\r\n    function getPlayerNumbers() {\r\n        let otherPlayerIndex = _activePlayer.number === 1 ? 1 : 0;\r\n        return [ _activePlayer.number, _players[ otherPlayerIndex ].number ];\r\n    }\r\n\r\n    setNewGameValues();\r\n    renderGameBoard();\r\n    updateScoreBoards( _players );\r\n\r\n\r\n    console.log( \"Empty cells: \", _scoreKeeper.getEmptyCells() );\r\n})();\r\n"],"sourceRoot":"/source/"}